// <auto-generated />
using System;
using GlobalInvest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlobalInvest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250226112025_AddCurrencyToIncomeReport")]
    partial class AddCurrencyToIncomeReport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("GlobalInvest.Models.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("GlobalInvest.Models.IncomeReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IncomeReports");
                });

            modelBuilder.Entity("GlobalInvest.Models.NavCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("FundId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("NavValue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Date")
                        .HasDatabaseName("IX_NavCourse_Date");

                    b.HasIndex("FundId")
                        .HasDatabaseName("IX_NavCourse_FundId");

                    b.ToTable("NavCourses");
                });

            modelBuilder.Entity("GlobalInvest.Models.TaxSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DisposableIncome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("EmploymentIncome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FinalTax")
                        .HasColumnType("TEXT");

                    b.Property<int>("IncomeReportId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IncomeYear")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IncomeReportId");

                    b.ToTable("TaxSummaries");
                });

            modelBuilder.Entity("GlobalInvest.Models.NavCourse", b =>
                {
                    b.HasOne("GlobalInvest.Models.Fund", "Fund")
                        .WithMany("NavCourses")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fund");
                });

            modelBuilder.Entity("GlobalInvest.Models.TaxSummary", b =>
                {
                    b.HasOne("GlobalInvest.Models.IncomeReport", "IncomeReport")
                        .WithMany("TaxSummaries")
                        .HasForeignKey("IncomeReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncomeReport");
                });

            modelBuilder.Entity("GlobalInvest.Models.Fund", b =>
                {
                    b.Navigation("NavCourses");
                });

            modelBuilder.Entity("GlobalInvest.Models.IncomeReport", b =>
                {
                    b.Navigation("TaxSummaries");
                });
#pragma warning restore 612, 618
        }
    }
}
